class Solution {
    public int[] nextGreaterElements(int[] nums) {
        
        int n = nums.length;
        int[] result = new int[n];
        Stack<Integer> st = new Stack<>();

        // Fill with -1 initially
        Arrays.fill(result, -1);

        // Loop twice for circular behavior
        for (int i = 2 * n - 1; i >= 0; i--) {
            int num = nums[i % n];

            // Maintain monotonic decreasing stack
            while (!st.isEmpty() && st.peek() <= num) {
                st.pop();
            }

            if (i < n) {
                result[i] = st.isEmpty() ? -1 : st.peek();
            }

            st.push(num);
        }

        return result;  
    }
}
